{"version":3,"file":"/Users/carlosbuendia/Documents/Projects/consensys/Frontier/clean/trl-api/src/services/resolvers/votes.ts","sources":["/Users/carlosbuendia/Documents/Projects/consensys/Frontier/clean/trl-api/src/services/resolvers/votes.ts"],"names":[],"mappings":"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","sourcesContent":["import { IFieldResolver, IResolvers } from 'graphql-tools';\nimport applyPagination from './util';\nconst _ = require('lodash');\n\nconst resolve = async (args: any, valueName: string, collection: any) => {\n  const filteredArgs = _.pickBy(args, _.negate(_.isUndefined));\n  const params = Object.entries(filteredArgs)[0];\n  const document = await collection.findOne(\n    { [`event.returnValues.${params[0]}`]: params[1] },\n    { [`event.returnValues.${valueName}`]: 1 }\n  );\n\n  return document.event.returnValues[valueName];\n};\n\ninterface IVotesArgs {\n  _candidateAddress?: [string];\n  _voterAddress?: [string];\n  _amount?: [number];\n  _periodIndex?: [number];\n  first?: number;\n  last?: number;\n}\n\ninterface IAmountArgs {\n  _periodIndex?: [number];\n}\n\nconst getResolver = async (votesCollection: any) => {\n  const votes: IFieldResolver<any, any> = async (obj, args: IVotesArgs) => {\n    const filteredArgs = _.pickBy(args, _.negate(_.isUndefined));\n    const params = Object.entries(filteredArgs);\n\n    const query = {};\n    params.forEach((condition) => {\n      const match = typeof condition[1] === 'string' ? { $regex: condition[1], $options: 'i' } : condition[1];\n      query[`event.returnValues.${condition[0]}`] = match;\n    });\n\n    const document = await votesCollection.find(\n      query,\n      {\n        sort: {\n          'event.blockNumber': 1\n        },\n        fields: {\n          'event.returnValues': 1,\n          'event.transactionHash': 1\n        }\n      }\n    ).toArray();\n\n    return document.map((key: any) => {\n      return Object.assign({}, key.event.returnValues, { _transactionHash: key.event.transactionHash || '' });\n    });\n  };\n\n  const totalAmountOfVotes: IFieldResolver<any, any> = async (\n    obj,\n    args: IAmountArgs\n  ) => {\n    const filteredArgs = _.pickBy(args, _.negate(_.isUndefined));\n    const params = Object.entries(filteredArgs)[0];\n\n    const document = await votesCollection.aggregate([\n      {\n        $match: {\n          [`event.returnValues.${params[0]}`]: params[1]\n        }\n      },\n      {\n        $project: {\n          _id: '$_id',\n          'event.returnValues._amount': {\n            $sum: '$event.returnValues._amount'\n          },\n          'event.returnValues._periodIndex': {\n            $sum: params[1]\n          }\n        }\n      }\n    ]);\n\n    const array = await document.toArray();\n\n    return array.map((key: any) => key.event.returnValues);\n  };\n\n  const resolvers: IResolvers = {\n    Vote: {\n      _candidateAddress: async (args: any) => {\n        if (args._candidateAddress) return args._candidateAddress;\n        return resolve(args, '_candidateAddress', votesCollection);\n      },\n      _voterAddress: async (args: any) => {\n        if (args._voterAddress) return args._voterAddress;\n        return resolve(args, '_voterAddress', votesCollection);\n      },\n      _amount: async (args: any) => {\n        if (args._amount) return args._amount;\n        return resolve(args, '_amount', votesCollection);\n      },\n      _periodIndex: async (args: any) => {\n        if (args._periodIndex) return args._periodIndex;\n        return resolve(args, '_periodIndex', votesCollection);\n      },\n      _transactionHash: async (args: any) => {\n        return args._transactionHash || '';\n      }\n    },\n\n    TotalAmountOfVotes: {\n      _periodIndex: async (args: any) => {\n        if (args[0]._periodIndex) return args[0]._periodIndex;\n      },\n      _amount: async (args: any) => {\n        if (args[0]._amount) return args[0]._amount;\n      }\n    },\n\n    Query: {\n      vote(obj, { _candidatesAddress, _voterAddress, _amount, _periodIndex }) {\n        return {\n          _candidatesAddress,\n          _voterAddress,\n          _amount,\n          _periodIndex\n        };\n      },\n      votes,\n      totalAmountOfVotes\n    }\n  };\n  return resolvers;\n};\n\nexport default getResolver;\n"]}