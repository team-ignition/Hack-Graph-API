{"version":3,"file":"/Users/carlosbuendia/Documents/Projects/consensys/Frontier/clean/trl-api/src/services/resolvers/graphqlAgainstWeb3.ts","sources":["/Users/carlosbuendia/Documents/Projects/consensys/Frontier/clean/trl-api/src/services/resolvers/graphqlAgainstWeb3.ts"],"names":[],"mappings":";;;;;;;;;;AACA,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5B,4CAAoC;AAQlC,MAAM,YAAY,GAA6B,CAC7C,GAAG,EACH,IAAiB,EACjB,EAAE;IACF,MAAM,YAAY,GAAG,MAAM,kBAAQ,CAAC,SAAS,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IAClH,OAAO,YAAY,CAAC;AAEtB,CAAC,CAAA,CAAC;AAEJ,MAAM,SAAS,GAAe;IAC1B,YAAY,EAAE;QACZ,OAAO,EAAE,CAAO,YAAiB,EAAE,EAAE;YACnC,IAAI,YAAY;gBAAE,OAAO,YAAY,CAAC;QACxC,CAAC,CAAA;KACF;IACD,KAAK,EAAE;QACH,YAAY;KACf;CACJ,CAAC;AAGF,kBAAe,SAAS,CAAC","sourcesContent":["import { IFieldResolver, IResolvers } from 'graphql-tools';\nconst _ = require('lodash');\nimport frontier from \"./../frontier\"\n\n\ninterface IAmountArgs {\n    _periodIndex: number;\n    _voterAddress: string;\n}\n\n  const votesBalance: IFieldResolver<any, any> = async (\n    obj,\n    args: IAmountArgs\n  ) => {\n    const tokenBalance = await frontier.contracts.TokenRankedList.votesBalance(args._periodIndex, args._voterAddress);\n    return tokenBalance;\n\n  };\n\nconst resolvers: IResolvers = {\n    VotesBalance: {\n      _amount: async (tokenBalance: any) => {\n        if (tokenBalance) return tokenBalance;\n      }\n    },\n    Query: {\n        votesBalance\n    }\n};\n\n\nexport default resolvers;\n"]}