{"version":3,"file":"/Users/carlosbuendia/Documents/Projects/consensys/Frontier/clean/trl-api/src/services/resolvers/candidates.ts","sources":["/Users/carlosbuendia/Documents/Projects/consensys/Frontier/clean/trl-api/src/services/resolvers/candidates.ts"],"names":[],"mappings":"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","sourcesContent":["import { IFieldResolver, IResolvers } from 'graphql-tools';\nimport applyPagination from './util'\nconst _ = require('lodash')\n\nconst resolve = async (args: any, valueName: string, collection: any) => {\n  const filteredArgs = _.pickBy(args, _.negate(_.isUndefined));\n  const params = Object.entries(filteredArgs)[0];\n  let document = await collection.findOne(\n    { [`event.returnValues.${params[0]}`]: params[1].toString() },\n    { [`event.returnValues.${valueName}`]: 1 }\n  );\n\n  if (document === null) {\n    document = { event: { returnValues: { [valueName]: undefined } } };\n  }\n  return document.event.returnValues[valueName];\n};\n\ninterface IVotesArgs {\n  _candidateAddress?: [string];\n  _totalAmountOfVotes?: [number];\n  _votersAmount?: [number];\n  _periodIndex?: [number];\n  first?: number;\n  last?: number;\n}\n\nconst getResolver = async (candidatesCollection: any) => {\n  const candidates: IFieldResolver<any, any> = async (\n    obj,\n    args: IVotesArgs\n  ) => {\n    const filteredArgs = _.pickBy(args, _.negate(_.isUndefined));\n\n    const document = await candidatesCollection.aggregate([\n      {\n        $match: filteredArgs._candidateAddress ? { 'event.returnValues._whiteListedAccount': { $regex: filteredArgs._candidateAddress, $options: 'i' } } : {}\n      },\n      {\n        $lookup: {\n          from: 'votes',\n          let: { localAddress: '$event.returnValues._whiteListedAccount' },\n          pipeline: [\n            {\n              $match:\n              {\n                $expr:\n                {\n                  $and:\n                    [\n                      { $eq: ['$event.returnValues._periodIndex', filteredArgs._periodIndex] },\n                      { $eq: ['$event.returnValues._candidateAddress', '$$localAddress'] }\n                    ]\n                }\n              }\n            },\n            {\n              // Group votes by voters, and sum all their votes\n              $group: {\n                _id: '$event.returnValues._voterAddress',\n                totalAmount: { $sum: '$event.returnValues._amount' }\n              }\n            }\n          ],\n          as: 'event.returnValues.candidate_votes'\n        }\n      },\n      {\n        $project: {\n          _id: '$_id',\n          'event.returnValues._candidateAddress': '$event.returnValues._whiteListedAccount',\n          'event.returnValues.candidate_votes': 1,\n          // As we group the votes by voters, we know the amount of voters with the size of the group\n          'event.returnValues._votersAmount': { $size: '$event.returnValues.candidate_votes' },\n          'event.returnValues._totalAmountOfVotes': {\n            $cond: {\n              if: { $gt: [{ $size: '$event.returnValues.candidate_votes' }, 0] },\n              then: { $sum: '$event.returnValues.candidate_votes.totalAmount' },\n              else: 0\n            }\n          }\n        }\n      },\n      { $sort: { 'event.returnValues._totalAmountOfVotes': -1 } }\n    ]).toArray();\n\n    return document.map((key: any) => key.event.returnValues);\n  };\n\n  const resolvers: IResolvers = {\n    Candidate: {\n      _candidateAddress: async (args: any) => {\n        if (args._candidateAddress) return args._candidateAddress;\n        return resolve(args, '_whiteListedAccount', candidatesCollection);\n      },\n      _totalAmountOfVotes: async (args: any) => {\n        if (_.isInteger(args._totalAmountOfVotes)) return args._totalAmountOfVotes;\n        return resolve(args, '_totalAmountOfVotes', candidatesCollection);\n      },\n      _votersAmount: async (args: any) => {\n        if (_.isInteger(args._votersAmount)) return args._votersAmount;\n        return resolve(args, '_votersAmount', candidatesCollection);\n      }\n    },\n\n    Query: {\n      candidate(\n        obj,\n        { _candidatesAddress, _totalAmountOfVotes, _periodIndex, _votes }\n      ) {\n        return {\n          _candidatesAddress,\n          _totalAmountOfVotes,\n          _periodIndex,\n          _votes\n        };\n      },\n      candidates\n    }\n  };\n  return resolvers;\n};\n\nexport default getResolver;"]}