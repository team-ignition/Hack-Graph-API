{
  "contractName": "Proxy",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "setVoterRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "setToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "candidateRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "setSubscriptionAccount",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "votesReceived",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "votingConstraints",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "subscriptionAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "setPeriodicStages",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "votesBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "setVault",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "totalEpochVotes",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "periodicStages",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "repWeights",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "voterRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "setCandidateRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "logicContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakingConstraints",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "reputationWindowSize",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "setContractLogic",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proxyType",
      "outputs": [
        {
          "name": "proxyTypeId",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526040805190810160405280600081526020017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff815250600990600261004a929190610113565b506040805190810160405280600081526020017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff815250600b906002610091929190610113565b506000600d556001600e60006101000a81548160ff0219169083151502179055506000600e60016101000a81548160ff02191690831515021790555033601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610178565b8260028101928215610142579160200282015b82811115610141578251825591602001919060010190610126565b5b50905061014f9190610153565b5090565b61017591905b80821115610171576000816000905550600101610159565b5090565b90565b610ed1806101876000396000f300608060405260043610610149576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630ad3034214610190578063144fa6d7146101d357806319de047714610216578063221797121461026d57806333dd6bed146102b05780633c84107f146103115780634555d5c914610352578063508ca9f11461037d5780635521b96f146103d45780635706d0ec146104175780635c60da1b146104785780636817031b146104cf57806373300f8f1461051257806381c8a8c4146105535780638da5cb5b146105aa578063b2a5655114610601578063be60040e14610642578063c254666514610699578063cc0e97c9146106dc578063dac93e1b14610733578063e43c809614610774578063f2fde38b1461079f578063f431563b146107e2578063fbfa77cf1461083d578063fc0c546a14610894575b60006101536108eb565b905060405136600082376000803683855af43d806000843e8160008114610181576001811461018557610189565b8184fd5b8184f35b5050505050005b34801561019c57600080fd5b506101d1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610915565b005b3480156101df57600080fd5b50610214600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610959565b005b34801561022257600080fd5b5061022b61099d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561027957600080fd5b506102ae600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109c3565b005b3480156102bc57600080fd5b506102fb60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a07565b6040518082815260200191505060405180910390f35b34801561031d57600080fd5b5061033c60048036038101908080359060200190929190505050610a2c565b6040518082815260200191505060405180910390f35b34801561035e57600080fd5b50610367610a46565b6040518082815260200191505060405180910390f35b34801561038957600080fd5b50610392610a4f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103e057600080fd5b50610415600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a75565b005b34801561042357600080fd5b5061046260048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ab9565b6040518082815260200191505060405180910390f35b34801561048457600080fd5b5061048d6108eb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104db57600080fd5b50610510600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ade565b005b34801561051e57600080fd5b5061053d60048036038101908080359060200190929190505050610b22565b6040518082815260200191505060405180910390f35b34801561055f57600080fd5b50610568610b3a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105b657600080fd5b506105bf610b60565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561060d57600080fd5b5061062c60048036038101908080359060200190929190505050610b86565b6040518082815260200191505060405180910390f35b34801561064e57600080fd5b50610657610ba9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106a557600080fd5b506106da600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bcf565b005b3480156106e857600080fd5b506106f1610c13565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561073f57600080fd5b5061075e60048036038101908080359060200190929190505050610c39565b6040518082815260200191505060405180910390f35b34801561078057600080fd5b50610789610c53565b6040518082815260200191505060405180910390f35b3480156107ab57600080fd5b506107e0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c59565b005b3480156107ee57600080fd5b50610823600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610db1565b604051808215151515815260200191505060405180910390f35b34801561084957600080fd5b50610852610e59565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156108a057600080fd5b506108a9610e7f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000602052816000526040600020602052806000526040600020600091509150505481565b600b81600281101515610a3b57fe5b016000915090505481565b60006002905090565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6001602052816000526040600020602052806000526040600020600091509150505481565b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60026020528060005260406000206000915090505481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600f81815481101515610b9557fe5b906000526020600020016000915090505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600981600281101515610c4857fe5b016000915090505481565b600d5481565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610cb557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610cf157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e0f57600080fd5b81601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a723058200e0fcc024d415ad328a3e6cb93d81f79e094f18b60e1ee8f2ecd6c7889801ecb0029",
  "deployedBytecode": "0x608060405260043610610149576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630ad3034214610190578063144fa6d7146101d357806319de047714610216578063221797121461026d57806333dd6bed146102b05780633c84107f146103115780634555d5c914610352578063508ca9f11461037d5780635521b96f146103d45780635706d0ec146104175780635c60da1b146104785780636817031b146104cf57806373300f8f1461051257806381c8a8c4146105535780638da5cb5b146105aa578063b2a5655114610601578063be60040e14610642578063c254666514610699578063cc0e97c9146106dc578063dac93e1b14610733578063e43c809614610774578063f2fde38b1461079f578063f431563b146107e2578063fbfa77cf1461083d578063fc0c546a14610894575b60006101536108eb565b905060405136600082376000803683855af43d806000843e8160008114610181576001811461018557610189565b8184fd5b8184f35b5050505050005b34801561019c57600080fd5b506101d1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610915565b005b3480156101df57600080fd5b50610214600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610959565b005b34801561022257600080fd5b5061022b61099d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561027957600080fd5b506102ae600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109c3565b005b3480156102bc57600080fd5b506102fb60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a07565b6040518082815260200191505060405180910390f35b34801561031d57600080fd5b5061033c60048036038101908080359060200190929190505050610a2c565b6040518082815260200191505060405180910390f35b34801561035e57600080fd5b50610367610a46565b6040518082815260200191505060405180910390f35b34801561038957600080fd5b50610392610a4f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103e057600080fd5b50610415600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a75565b005b34801561042357600080fd5b5061046260048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ab9565b6040518082815260200191505060405180910390f35b34801561048457600080fd5b5061048d6108eb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104db57600080fd5b50610510600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ade565b005b34801561051e57600080fd5b5061053d60048036038101908080359060200190929190505050610b22565b6040518082815260200191505060405180910390f35b34801561055f57600080fd5b50610568610b3a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105b657600080fd5b506105bf610b60565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561060d57600080fd5b5061062c60048036038101908080359060200190929190505050610b86565b6040518082815260200191505060405180910390f35b34801561064e57600080fd5b50610657610ba9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106a557600080fd5b506106da600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bcf565b005b3480156106e857600080fd5b506106f1610c13565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561073f57600080fd5b5061075e60048036038101908080359060200190929190505050610c39565b6040518082815260200191505060405180910390f35b34801561078057600080fd5b50610789610c53565b6040518082815260200191505060405180910390f35b3480156107ab57600080fd5b506107e0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c59565b005b3480156107ee57600080fd5b50610823600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610db1565b604051808215151515815260200191505060405180910390f35b34801561084957600080fd5b50610852610e59565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156108a057600080fd5b506108a9610e7f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000602052816000526040600020602052806000526040600020600091509150505481565b600b81600281101515610a3b57fe5b016000915090505481565b60006002905090565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6001602052816000526040600020602052806000526040600020600091509150505481565b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60026020528060005260406000206000915090505481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600f81815481101515610b9557fe5b906000526020600020016000915090505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600981600281101515610c4857fe5b016000915090505481565b600d5481565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610cb557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610cf157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e0f57600080fd5b81601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a723058200e0fcc024d415ad328a3e6cb93d81f79e094f18b60e1ee8f2ecd6c7889801ecb0029",
  "sourceMap": "240:1365:0:-;;;1023:55:4;;;;;;;;;1063:1;1023:55;;;;1074:2;1023:55;;;;;;;;;;;:::i;:::-;;1157:54;;;;;;;;;1196:1;1157:54;;;;1207:2;1157:54;;;;;;;;;;;:::i;:::-;;1256:1;1218:39;;1295:4;1264:35;;;;;;;;;;;;;;;;;;;;1333:5;1305:33;;;;;;;;;;;;;;;;;;;;509:10:13;501:5;;:18;;;;;;;;;;;;;;;;;;240:1365:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "240:1365:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1187:14;1204:16;:14;:16::i;:::-;1187:33;;1270:4;1264:11;1309:12;1306:1;1301:3;1288:34;1397:1;1394;1380:12;1375:3;1367:6;1362:3;1349:50;1424:14;1474:4;1471:1;1466:3;1451:28;1499:6;1523:1;1518:28;;;;1564:1;1559:28;;;;1492:95;;1518:28;1539:4;1534:3;1527:17;1559:28;1580:4;1575:3;1568:17;1492:95;;1239:358;;;;240:1365;1781:118:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1781:118:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;2018:107;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2018:107:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;544:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;544:33:4;;;;;;;;;;;;;;;;;;;;;;;;;;;2605:104;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2605:104:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;290:69;;8:9:-1;5:2;;;30:1;27;20:12;5:2;290:69:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1157:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1157:54:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;777:88:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;777:88:0;;;;;;;;;;;;;;;;;;;;;;;918:34:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;918:34:4;;;;;;;;;;;;;;;;;;;;;;;;;;;2254:126;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2254:126:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;365:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;365:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:93:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;952:93:0;;;;;;;;;;;;;;;;;;;;;;;;;;;2500:99:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2500:99:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;439:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;439:51:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;777:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;777:36:4;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:13;;;;;;;;;;;;;;;;;;;;;;;;;;;1344:27:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1344:27:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;631:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;631:29:4;;;;;;;;;;;;;;;;;;;;;;;;;;;1527:126;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1527:126:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;285:28:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;285:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1023:55:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1023:55:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1218:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1218:39:4;;;;;;;;;;;;;;;;;;;;;;;832:174:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;832:174:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;497::0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;497:174:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;854:18:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;854:18:4;;;;;;;;;;;;;;;;;;;;;;;;;;;706:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;706:26:4;;;;;;;;;;;;;;;;;;;;;;;;;;;952:93:0;999:7;1025:13;;;;;;;;;;;1018:20;;952:93;:::o;1781:118:4:-;1875:16;1850:13;;:42;;;;;;;;;;;;;;;;;;1781:118;:::o;2018:107::-;2101:16;2079:5;;:39;;;;;;;;;;;;;;;;;;2018:107;:::o;544:33::-;;;;;;;;;;;;;:::o;2605:104::-;2694:8;2672:19;;:30;;;;;;;;;;;;;;;;;;2605:104;:::o;290:69::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1157:54::-;;;;;;;;;;;;;;;;;;;;:::o;777:88:0:-;819:19;857:1;850:8;;777:88;:::o;918:34:4:-;;;;;;;;;;;;;:::o;2254:126::-;2356:16;2324:14;;:49;;;;;;;;;;;;;;;;;;2254:126;:::o;365:68::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2500:99::-;2575:16;2561:5;;:31;;;;;;;;;;;;;;;;;;2500:99;:::o;439:51::-;;;;;;;;;;;;;;;;;:::o;777:36::-;;;;;;;;;;;;;:::o;238:20:13:-;;;;;;;;;;;;;:::o;1344:27:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;631:29::-;;;;;;;;;;;;;:::o;1527:126::-;1629:16;1600:17;;:46;;;;;;;;;;;;;;;;;;1527:126;:::o;285:28:0:-;;;;;;;;;;;;;:::o;1023:55:4:-;;;;;;;;;;;;;;;;;;;;:::o;1218:39::-;;;;:::o;832:174:13:-;653:5;;;;;;;;;;;639:19;;:10;:19;;;631:28;;;;;;;;928:1;908:22;;:8;:22;;;;900:31;;;;;;;;970:8;942:37;;963:5;;;;;;;;;;;942:37;;;;;;;;;;;;993:8;985:5;;:16;;;;;;;;;;;;;;;;;;832:174;:::o;497::0:-;557:12;603:5;;;;;;;;;;;589:19;;:10;:19;;;581:28;;;;;;;;635:8;619:13;;:24;;;;;;;;;;;;;;;;;;660:4;653:11;;497:174;;;:::o;854:18:4:-;;;;;;;;;;;;;:::o;706:26::-;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./TRLStorage.sol\";\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\n/**\n * A proxy Smart Contract following ERC897. Delegate calls to a target contract accessible via implementation() \n */\n\ncontract Proxy is TRLStorage, Ownable {\n\n    address public logicContract;\n\n    /**\n     * @dev Sets the target address where the calls will be delegated. \n     * @param _account Target address, that will be accesible via implementation()\n     */\n     \n    function setContractLogic(address _account) public returns (bool success) {\n        require(msg.sender == owner);\n        logicContract = _account;\n        return true;\n    }\n    \n    /**\n     * @dev ERC897, whether it is a forwarding (1) or an upgradeable (2) proxy\n     */\n\n    function proxyType() public pure returns (uint256 proxyTypeId) {\n        return 2;\n    }\n\n    /**\n    * @dev ERC897, the address the proxy would delegate calls to\n    */\n\n    function implementation() public view returns (address) {\n        return logicContract;\n    }\n\n    /**\n    * @dev Proxy function. Delegate calls to the address taken on implementation()\n    */\n\n    function () payable public {\n        address target = implementation();\n        assembly {\n            let ptr := mload(0x40)\n            calldatacopy(ptr, 0, calldatasize)\n            let result := delegatecall(gas, target, ptr, calldatasize, 0, 0)\n            let size := returndatasize\n            returndatacopy(ptr, 0, size)\n            switch result\n            case 0 { revert(ptr, size) }\n            case 1 { return(ptr, size) }\n        }\n    }\n}",
  "sourcePath": "/Users/carlosbuendia/Documents/Projects/consensys/Frontier/TRL/contracts/Proxy.sol",
  "ast": {
    "absolutePath": "/Users/carlosbuendia/Documents/Projects/consensys/Frontier/TRL/contracts/Proxy.sol",
    "exportedSymbols": {
      "Proxy": [
        57
      ]
    },
    "id": 58,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Users/carlosbuendia/Documents/Projects/consensys/Frontier/TRL/contracts/TRLStorage.sol",
        "file": "./TRLStorage.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 58,
        "sourceUnit": 1381,
        "src": "26:26:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 58,
        "sourceUnit": 2385,
        "src": "53:63:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "TRLStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1380,
              "src": "258:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TRLStorage_$1380",
                "typeString": "contract TRLStorage"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "258:10:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2384,
              "src": "270:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2384",
                "typeString": "contract Ownable"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "270:7:0"
          }
        ],
        "contractDependencies": [
          1380,
          2384
        ],
        "contractKind": "contract",
        "documentation": "A proxy Smart Contract following ERC897. Delegate calls to a target contract accessible via implementation() ",
        "fullyImplemented": true,
        "id": 57,
        "linearizedBaseContracts": [
          57,
          2384,
          1380
        ],
        "name": "Proxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 9,
            "name": "logicContract",
            "nodeType": "VariableDeclaration",
            "scope": 57,
            "src": "285:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "285:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 29,
              "nodeType": "Block",
              "src": "571:100:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 20,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 17,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2816,
                            "src": "589:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 18,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "589:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 19,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2332,
                          "src": "603:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "589:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 16,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2819,
                        2820
                      ],
                      "referencedDeclaration": 2819,
                      "src": "581:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "581:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22,
                  "nodeType": "ExpressionStatement",
                  "src": "581:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 25,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23,
                      "name": "logicContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "619:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 24,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "635:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "619:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 26,
                  "nodeType": "ExpressionStatement",
                  "src": "619:24:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "660:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 15,
                  "id": 28,
                  "nodeType": "Return",
                  "src": "653:11:0"
                }
              ]
            },
            "documentation": "@dev Sets the target address where the calls will be delegated. \n@param _account Target address, that will be accesible via implementation()",
            "id": 30,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setContractLogic",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "523:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "522:18:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "557:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "556:14:0"
            },
            "scope": 57,
            "src": "497:174:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 37,
              "nodeType": "Block",
              "src": "840:25:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "32",
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "857:1:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "functionReturnParameters": 34,
                  "id": 36,
                  "nodeType": "Return",
                  "src": "850:8:0"
                }
              ]
            },
            "documentation": "@dev ERC897, whether it is a forwarding (1) or an upgradeable (2) proxy",
            "id": 38,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "proxyType",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "795:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "name": "proxyTypeId",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "819:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "819:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "818:21:0"
            },
            "scope": 57,
            "src": "777:88:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 45,
              "nodeType": "Block",
              "src": "1008:37:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 43,
                    "name": "logicContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9,
                    "src": "1025:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 42,
                  "id": 44,
                  "nodeType": "Return",
                  "src": "1018:20:0"
                }
              ]
            },
            "documentation": "@dev ERC897, the address the proxy would delegate calls to",
            "id": 46,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "implementation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "975:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 46,
                  "src": "999:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "999:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "998:9:0"
            },
            "scope": 57,
            "src": "952:93:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 55,
              "nodeType": "Block",
              "src": "1177:426:0",
              "statements": [
                {
                  "assignments": [
                    50
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50,
                      "name": "target",
                      "nodeType": "VariableDeclaration",
                      "scope": 56,
                      "src": "1187:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 49,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1187:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 53,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 51,
                      "name": "implementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "1204:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1204:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1187:33:0"
                },
                {
                  "externalReferences": [
                    {
                      "target": {
                        "declaration": 50,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1367:6:0",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 54,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let ptr := mload(0x40)\n    calldatacopy(ptr, 0, calldatasize())\n    let result := delegatecall(gas(), target, ptr, calldatasize(), 0, 0)\n    let size := returndatasize()\n    returndatacopy(ptr, 0, size)\n    switch result\n    case 0 {\n        revert(ptr, size)\n    }\n    case 1 {\n        return(ptr, size)\n    }\n}",
                  "src": "1230:373:0"
                }
              ]
            },
            "documentation": "@dev Proxy function. Delegate calls to the address taken on implementation()",
            "id": 56,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1159:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1177:0:0"
            },
            "scope": 57,
            "src": "1150:453:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 58,
        "src": "240:1365:0"
      }
    ],
    "src": "0:1605:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/carlosbuendia/Documents/Projects/consensys/Frontier/TRL/contracts/Proxy.sol",
    "exportedSymbols": {
      "Proxy": [
        57
      ]
    },
    "id": 58,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Users/carlosbuendia/Documents/Projects/consensys/Frontier/TRL/contracts/TRLStorage.sol",
        "file": "./TRLStorage.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 58,
        "sourceUnit": 1381,
        "src": "26:26:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 58,
        "sourceUnit": 2385,
        "src": "53:63:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "TRLStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1380,
              "src": "258:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TRLStorage_$1380",
                "typeString": "contract TRLStorage"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "258:10:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2384,
              "src": "270:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2384",
                "typeString": "contract Ownable"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "270:7:0"
          }
        ],
        "contractDependencies": [
          1380,
          2384
        ],
        "contractKind": "contract",
        "documentation": "A proxy Smart Contract following ERC897. Delegate calls to a target contract accessible via implementation() ",
        "fullyImplemented": true,
        "id": 57,
        "linearizedBaseContracts": [
          57,
          2384,
          1380
        ],
        "name": "Proxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 9,
            "name": "logicContract",
            "nodeType": "VariableDeclaration",
            "scope": 57,
            "src": "285:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "285:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 29,
              "nodeType": "Block",
              "src": "571:100:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 20,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 17,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2816,
                            "src": "589:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 18,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "589:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 19,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2332,
                          "src": "603:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "589:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 16,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2819,
                        2820
                      ],
                      "referencedDeclaration": 2819,
                      "src": "581:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "581:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22,
                  "nodeType": "ExpressionStatement",
                  "src": "581:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 25,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23,
                      "name": "logicContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "619:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 24,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "635:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "619:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 26,
                  "nodeType": "ExpressionStatement",
                  "src": "619:24:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "660:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 15,
                  "id": 28,
                  "nodeType": "Return",
                  "src": "653:11:0"
                }
              ]
            },
            "documentation": "@dev Sets the target address where the calls will be delegated. \n@param _account Target address, that will be accesible via implementation()",
            "id": 30,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setContractLogic",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "523:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "522:18:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "557:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "556:14:0"
            },
            "scope": 57,
            "src": "497:174:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 37,
              "nodeType": "Block",
              "src": "840:25:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "32",
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "857:1:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "functionReturnParameters": 34,
                  "id": 36,
                  "nodeType": "Return",
                  "src": "850:8:0"
                }
              ]
            },
            "documentation": "@dev ERC897, whether it is a forwarding (1) or an upgradeable (2) proxy",
            "id": 38,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "proxyType",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "795:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "name": "proxyTypeId",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "819:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "819:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "818:21:0"
            },
            "scope": 57,
            "src": "777:88:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 45,
              "nodeType": "Block",
              "src": "1008:37:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 43,
                    "name": "logicContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9,
                    "src": "1025:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 42,
                  "id": 44,
                  "nodeType": "Return",
                  "src": "1018:20:0"
                }
              ]
            },
            "documentation": "@dev ERC897, the address the proxy would delegate calls to",
            "id": 46,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "implementation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "975:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 46,
                  "src": "999:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "999:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "998:9:0"
            },
            "scope": 57,
            "src": "952:93:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 55,
              "nodeType": "Block",
              "src": "1177:426:0",
              "statements": [
                {
                  "assignments": [
                    50
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50,
                      "name": "target",
                      "nodeType": "VariableDeclaration",
                      "scope": 56,
                      "src": "1187:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 49,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1187:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 53,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 51,
                      "name": "implementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "1204:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1204:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1187:33:0"
                },
                {
                  "externalReferences": [
                    {
                      "target": {
                        "declaration": 50,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1367:6:0",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 54,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let ptr := mload(0x40)\n    calldatacopy(ptr, 0, calldatasize())\n    let result := delegatecall(gas(), target, ptr, calldatasize(), 0, 0)\n    let size := returndatasize()\n    returndatacopy(ptr, 0, size)\n    switch result\n    case 0 {\n        revert(ptr, size)\n    }\n    case 1 {\n        return(ptr, size)\n    }\n}",
                  "src": "1230:373:0"
                }
              ]
            },
            "documentation": "@dev Proxy function. Delegate calls to the address taken on implementation()",
            "id": 56,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1159:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1177:0:0"
            },
            "scope": 57,
            "src": "1150:453:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 58,
        "src": "240:1365:0"
      }
    ],
    "src": "0:1605:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x11a71dbfadcf69160561e79e97856a8b5ff0bbe4",
      "transactionHash": "0x017f7bb272686f8beae706c50bf72da4a3afb23e6853cd8ee56b62261648744d"
    },
    "1539030613809": {
      "events": {},
      "links": {},
      "address": "0x6d080af9ca0b46ff0f688b342f4482a808e76fda",
      "transactionHash": "0x998a69dc2ed8841bd51a31d509258356f30d3f259b46d3fc64bbb3e80e90499e"
    },
    "1539079246989": {
      "events": {},
      "links": {},
      "address": "0x4299f565d5a085e80686413370347fdb3616c245",
      "transactionHash": "0x0d8cafb632177eaf19543372c3c0d2c73ace2a5bfd29023225f4823f139c4d54"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-10-09T23:03:31.044Z"
}