{"version":3,"file":"/Users/carlosbuendia/Documents/Projects/consensys/Frontier/clean/trl-api/src/services/resolvers/ownedRegistryContract.ts","sources":["/Users/carlosbuendia/Documents/Projects/consensys/Frontier/clean/trl-api/src/services/resolvers/ownedRegistryContract.ts"],"names":[],"mappings":"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","sourcesContent":["import { IResolvers } from 'graphql-tools';\nimport * as _ from 'lodash';\n\nconst resolve = async (args: any, valueName: string, collection: any) => {\n  const filteredArgs = _.pickBy(args, _.negate(_.isUndefined));\n  const params = Object.entries(filteredArgs)[0];\n  const document = await collection.findOne(\n    { [`event.${params[0]}`]: params[1] },\n    { [`event.${valueName}`]: 1 }\n  );\n  return document.event[valueName];\n};\n\nconst getResolver = async (candidatesCollection: any) => {\n  const resolvers: IResolvers = {\n    Event: {\n      address: async (args: any) => {\n        const result = await resolve(args, 'address', candidatesCollection);\n        return result;\n      },\n      blockHash: async (args: any) => {\n        const result = await resolve(args, 'blockHash', candidatesCollection);\n        return result;\n      },\n      blockNumber: async (args: any) => {\n        const result = await resolve(args, 'blockNumber', candidatesCollection);\n        return result;\n      },\n      logIndex: async (args: any) => {\n        const result = await resolve(args, 'logIndex', candidatesCollection);\n        return result;\n      },\n      removed: async (args: any) => {\n        const result = await resolve(args, 'removed', candidatesCollection);\n        return result;\n      },\n      transactionHash: async (args: any) => {\n        const result = await resolve(\n          args,\n          'transactionHash',\n          candidatesCollection\n        );\n        return result;\n      },\n      transactionIndex: async (args: any) => {\n        const result = await resolve(\n          args,\n          'transactionIndex',\n          candidatesCollection\n        );\n        return result;\n      },\n      id: async (args: any) => {\n        const result = await resolve(args, 'id', candidatesCollection);\n        return result;\n      },\n      event: async (args: any) => {\n        const result = await resolve(args, 'event', candidatesCollection);\n        return result;\n      },\n      signature: async (args: any) => {\n        const result = await resolve(args, 'signature', candidatesCollection);\n        return result;\n      }\n    },\n\n    Query: {\n      event(\n        obj,\n        {\n          address,\n          blockHash,\n          blockNumber,\n          logIndex,\n          removed,\n          transactionHash,\n          transactionIndex,\n          id,\n          event,\n          signature\n        }\n      ) {\n        return {\n          address,\n          blockHash,\n          blockNumber,\n          logIndex,\n          removed,\n          transactionHash,\n          transactionIndex,\n          id,\n          event,\n          signature\n        };\n      }\n    }\n  };\n  return resolvers;\n};\n\nexport default getResolver;\n"]}